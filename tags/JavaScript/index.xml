<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Ankang</title><link>http://localhost:1313/tags/JavaScript/</link><description>Recent content in JavaScript on Ankang</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 26 Apr 2021 22:53:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/JavaScript/index.xml" rel="self" type="application/rss+xml"/><item><title>new/call/bind/instanceof的实现与代理</title><link>http://localhost:1313/post/new-call-bind-instanceof%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B8%8E%E4%BB%A3%E7%90%86/</link><pubDate>Mon, 26 Apr 2021 22:53:00 +0000</pubDate><guid>http://localhost:1313/post/new-call-bind-instanceof%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B8%8E%E4%BB%A3%E7%90%86/</guid><description>&lt;h2 id="类">类&lt;/h2>
&lt;h5 id="重写new">重写new&lt;/h5>
&lt;p>new内部过程：创建一个实例对象，this指向当前这个实例对象，会自动把函数执行，但是this内部指向变为实例对象，返回值没有或者是基本值，则返回实例对象；如果是引用值，以定义好的为主。&lt;/p></description></item><item><title>类/原型与原型链</title><link>http://localhost:1313/post/%E7%B1%BB-%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</link><pubDate>Sun, 25 Apr 2021 09:03:29 +0000</pubDate><guid>http://localhost:1313/post/%E7%B1%BB-%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</guid><description>&lt;h2 id="类">类&lt;/h2>
&lt;h5 id="构造函数和普通函数">构造函数和普通函数&lt;/h5>
&lt;p>相同点：&lt;/p>
&lt;p>定义的方式，都是通过function来定义&lt;/p>
&lt;p>执行时参数传递方式一样&lt;/p>
&lt;p>都会形成私有上下文，都有私有变量&lt;/p>
&lt;p>不同点：&lt;/p>
&lt;p>构造函数执行通过&lt;code>new&lt;/code>来执行，在执行时浏览器会在当前上下文中&lt;strong>创建一个实例对象&lt;/strong>，并且会让函数中的&lt;strong>this指向&lt;/strong>到这个实例对象中，而普通函数中的this指向为window。&lt;/p>
&lt;p>函数如过没有返回值或返回值为基本类型值，则返回&lt;code>undefined&lt;/code>或你指定的返回值;如果是构造函数，它没有返回值，则返回当前的&lt;strong>实例对象&lt;/strong>，如果有返回值，返回值是基本类型则也是返回当前对象，当返回的是引用类型，则返回你所指定的类型。&lt;/p>
&lt;p>构造函数：箭头函数没有this，不能当构造函数，箭头函数没有prototype；ES6简写没有prototype；&lt;/p></description></item><item><title>节流/防抖与对象</title><link>http://localhost:1313/post/%E8%8A%82%E6%B5%81-%E9%98%B2%E6%8A%96%E4%B8%8E%E5%AF%B9%E8%B1%A1/</link><pubDate>Thu, 22 Apr 2021 22:29:28 +0000</pubDate><guid>http://localhost:1313/post/%E8%8A%82%E6%B5%81-%E9%98%B2%E6%8A%96%E4%B8%8E%E5%AF%B9%E8%B1%A1/</guid><description>&lt;h2 id="防抖与节流">防抖与节流&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>函数防抖和函数节流都是防止某一时间频繁触发，但是这两者之间的原理却不一样。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>函数防抖是某一段时间内只执行一次，而函数节流是间隔时间执行。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h5 id="防抖">防抖&lt;/h5>
&lt;p>在高频操作下，只识别一次触发（事件的开始时刻或者结束时刻），实现：一般设置一个阈值，在阈值内无论操作多少次，程序只执行一次。&lt;/p>
&lt;h5 id="节流">节流&lt;/h5>
&lt;p>高频操作下，按照规定好的时间为间隔触发一次，等待变化一会在执行程序，避免资源浪费。规定在一个单位时间内，只能触发一次函数。如果这个单位时间内触发多次函数，只有一次生效。&lt;/p></description></item><item><title>作用域与闭包</title><link>http://localhost:1313/post/%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E9%97%AD%E5%8C%85/</link><pubDate>Wed, 21 Apr 2021 19:43:44 +0000</pubDate><guid>http://localhost:1313/post/%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E9%97%AD%E5%8C%85/</guid><description>&lt;h2 id="作用域">作用域&lt;/h2>
&lt;p>全局作用域、函数作用域、块级作用域&lt;/p>
&lt;p>作用域链会向上查找，找到全局window时中止==&amp;gt;not defined；函数被执行后其环境变量将从内存中删除，函数每次调用会创建一个新作用域。&lt;/p>
&lt;p>如果子函数将被使用时，父级环境将保留，不会被释放。===闭包&lt;/p>
&lt;p>块级作用域-ES6中添加的，使用let/const 定义的具有块级作用域，var没有块级作用域&lt;/p></description></item><item><title>Jquery之尺寸/位置/网络请求</title><link>http://localhost:1313/post/Jquery%E4%B9%8B%E5%B0%BA%E5%AF%B8-%E4%BD%8D%E7%BD%AE-%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link><pubDate>Tue, 20 Apr 2021 19:40:56 +0000</pubDate><guid>http://localhost:1313/post/Jquery%E4%B9%8B%E5%B0%BA%E5%AF%B8-%E4%BD%8D%E7%BD%AE-%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid><description>&lt;h2 id="jquery">Jquery：&lt;/h2>
&lt;h4 id="尺寸">尺寸&lt;/h4>
&lt;p>获取元素的宽高：width()&amp;ndash;返回数值类型&lt;/p>
&lt;ul>
&lt;li>当有参数时（数字）表示设置宽高&lt;/li>
&lt;/ul>
&lt;p>包含内边距：&amp;ndash;只能获取，返回数值类型，不能设置&lt;/p>
&lt;ul>
&lt;li>innerWidth()&lt;/li>
&lt;/ul>
&lt;p>包含边框和宽高（如果参数为true-&amp;gt;表示包括外边距）：&lt;/p>
&lt;ul>
&lt;li>outerWidth()&lt;/li>
&lt;/ul>
&lt;h4 id="位置">位置&lt;/h4>
&lt;p>获取、设置元素相对于文档的偏移坐标和父级没有关系，返回为对象{top,left}，值为数值；设置时参数为对象类型&lt;/p>
&lt;ul>
&lt;li>offset()&lt;/li>
&lt;/ul>
&lt;p>获取、设置元素被卷去的头部和左侧距离&lt;/p>
&lt;ul>
&lt;li>scrollTop([数字])/scrollLeft([数字])&lt;/li>
&lt;/ul></description></item><item><title>Jquery对象与基本设置</title><link>http://localhost:1313/post/Jquery%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</link><pubDate>Mon, 19 Apr 2021 08:01:55 +0000</pubDate><guid>http://localhost:1313/post/Jquery%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</guid><description>&lt;h2 id="jquery">Jquery：&lt;/h2>
&lt;p>1.x 版本支持IE6、7、8低版本浏览器，官方不再更新&lt;/p>
&lt;h3 id="入口函数">入口函数：&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;../js/jquery.js&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$(document).ready(function(){})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//或者
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$(function(){})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>入口函数可以在一个页面多次使用，表示页面结构加载完成。jQuery中的this指向已经处理，不建议在jQuery下使用箭头函数。&lt;/p></description></item><item><title>Promise中的then方法理解</title><link>http://localhost:1313/post/Promise%E4%B8%AD%E7%9A%84then%E6%96%B9%E6%B3%95%E7%90%86%E8%A7%A3/</link><pubDate>Sat, 17 Apr 2021 08:06:01 +0000</pubDate><guid>http://localhost:1313/post/Promise%E4%B8%AD%E7%9A%84then%E6%96%B9%E6%B3%95%E7%90%86%E8%A7%A3/</guid><description>&lt;h2 id="event-loop">Event Loop:&lt;/h2>
&lt;p>同步任务、异步任务&lt;/p>
&lt;h5 id="宏任务">宏任务：&lt;/h5>
&lt;ul>
&lt;li>
&lt;p>setTimeout&lt;/p>
&lt;/li>
&lt;li>
&lt;p>setInterval&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h5 id="微任务">微任务：&lt;/h5>
&lt;ul>
&lt;li>Promise&lt;/li>
&lt;/ul></description></item><item><title>Symbol/Set/Map与模块化开发</title><link>http://localhost:1313/post/Symbol-Set-Map%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91/</link><pubDate>Fri, 02 Apr 2021 19:13:35 +0000</pubDate><guid>http://localhost:1313/post/Symbol-Set-Map%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91/</guid><description>&lt;ul>
&lt;li>字符串方法&lt;/li>
&lt;li>Symbol&lt;/li>
&lt;li>Set/Map&lt;/li>
&lt;li>模块化开发&lt;/li>
&lt;/ul></description></item><item><title>正则表达式与ES6</title><link>http://localhost:1313/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8EES6/</link><pubDate>Thu, 01 Apr 2021 23:06:42 +0000</pubDate><guid>http://localhost:1313/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8EES6/</guid><description>&lt;ol>
&lt;li>正则表达式&amp;ndash;断言、群组&lt;/li>
&lt;li>ES6&amp;ndash;严格模式、箭头函数、解构赋值&lt;/li>
&lt;/ol></description></item><item><title>键盘/输入事件与正则表达式概念</title><link>http://localhost:1313/post/%E9%94%AE%E7%9B%98-%E8%BE%93%E5%85%A5%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A6%82%E5%BF%B5/</link><pubDate>Wed, 31 Mar 2021 23:03:36 +0000</pubDate><guid>http://localhost:1313/post/%E9%94%AE%E7%9B%98-%E8%BE%93%E5%85%A5%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A6%82%E5%BF%B5/</guid><description>&lt;ol>
&lt;li>KeyboardEvent事件&lt;/li>
&lt;li>InputEvent事件&lt;/li>
&lt;li>滚轮事件&lt;/li>
&lt;li>正则表达式&amp;ndash;重复匹配和非贪婪匹配&lt;/li>
&lt;/ol></description></item><item><title>系统事件概念</title><link>http://localhost:1313/post/%E7%B3%BB%E7%BB%9F%E4%BA%8B%E4%BB%B6%E6%A6%82%E5%BF%B5/</link><pubDate>Tue, 30 Mar 2021 22:35:55 +0000</pubDate><guid>http://localhost:1313/post/%E7%B3%BB%E7%BB%9F%E4%BA%8B%E4%BB%B6%E6%A6%82%E5%BF%B5/</guid><description>&lt;ol>
&lt;li>系统事件-Event对象、MouseEvent对象&lt;/li>
&lt;li>图片预加载&lt;/li>
&lt;li>拖拽&lt;/li>
&lt;/ol></description></item><item><title>DOM对象属性与事件基础</title><link>http://localhost:1313/post/DOM%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E4%B8%8E%E4%BA%8B%E4%BB%B6%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 29 Mar 2021 22:44:39 +0000</pubDate><guid>http://localhost:1313/post/DOM%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E4%B8%8E%E4%BA%8B%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid><description>&lt;ol>
&lt;li>DOM对象常用属性&lt;/li>
&lt;li>观察者模式、中介者模式&lt;/li>
&lt;li>事件委托&lt;/li>
&lt;/ol></description></item><item><title>DOM属性相关</title><link>http://localhost:1313/post/DOM%E5%B1%9E%E6%80%A7%E7%9B%B8%E5%85%B3/</link><pubDate>Sat, 27 Mar 2021 16:34:56 +0000</pubDate><guid>http://localhost:1313/post/DOM%E5%B1%9E%E6%80%A7%E7%9B%B8%E5%85%B3/</guid><description>&lt;ol>
&lt;li>DOM的对象属性&lt;/li>
&lt;li>标签属性&lt;/li>
&lt;li>CSS样式获取、写入&lt;/li>
&lt;li>纯函数概念&lt;/li>
&lt;/ol></description></item><item><title>数据驱动显示-表格的增删</title><link>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E6%98%BE%E7%A4%BA-%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%A2%9E%E5%88%A0/</link><pubDate>Fri, 26 Mar 2021 16:28:46 +0000</pubDate><guid>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E6%98%BE%E7%A4%BA-%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%A2%9E%E5%88%A0/</guid><description>&lt;p>通过数据变化引起显示相应改变&lt;/p></description></item><item><title>DOM对象相关</title><link>http://localhost:1313/post/DOM%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/</link><pubDate>Fri, 26 Mar 2021 16:28:01 +0000</pubDate><guid>http://localhost:1313/post/DOM%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/</guid><description>&lt;ol>
&lt;li>DOM节点的遍历&lt;/li>
&lt;li>DOM中元素与节点&lt;/li>
&lt;li>元素的删除与替换&lt;/li>
&lt;/ol></description></item><item><title>history与hash实现历史记录</title><link>http://localhost:1313/post/history%E4%B8%8Ehash%E5%AE%9E%E7%8E%B0%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 25 Mar 2021 20:18:20 +0000</pubDate><guid>http://localhost:1313/post/history%E4%B8%8Ehash%E5%AE%9E%E7%8E%B0%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid><description>&lt;ol>
&lt;li>历史记录的回退与记录&lt;/li>
&lt;li>hash与history&lt;/li>
&lt;/ol></description></item><item><title>BOM与DOM</title><link>http://localhost:1313/post/BOM%E4%B8%8EDOM/</link><pubDate>Thu, 25 Mar 2021 20:11:21 +0000</pubDate><guid>http://localhost:1313/post/BOM%E4%B8%8EDOM/</guid><description>&lt;ol>
&lt;li>BOM对象与DOM对象&lt;/li>
&lt;li>hash与history的区别&lt;/li>
&lt;/ol></description></item><item><title>排序及内建对象的应用</title><link>http://localhost:1313/post/%E6%8E%92%E5%BA%8F%E5%8F%8A%E5%86%85%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%94%E7%94%A8/</link><pubDate>Wed, 24 Mar 2021 16:32:34 +0000</pubDate><guid>http://localhost:1313/post/%E6%8E%92%E5%BA%8F%E5%8F%8A%E5%86%85%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%94%E7%94%A8/</guid><description>&lt;ol>
&lt;li>数组排序&lt;/li>
&lt;li>内建对象Math、String&lt;/li>
&lt;li>hash数据处理&lt;/li>
&lt;li>随机取色，随机验证码&lt;/li>
&lt;li>模糊查询&lt;/li>
&lt;/ol></description></item><item><title>数组常用方法重构与应用</title><link>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E9%87%8D%E6%9E%84%E4%B8%8E%E5%BA%94%E7%94%A8/</link><pubDate>Tue, 23 Mar 2021 20:46:02 +0000</pubDate><guid>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E9%87%8D%E6%9E%84%E4%B8%8E%E5%BA%94%E7%94%A8/</guid><description>&lt;ol>
&lt;li>数组常用方法&lt;/li>
&lt;li>实现重构&lt;/li>
&lt;li>常用方法的应用&lt;/li>
&lt;/ol></description></item><item><title>JS数组及常用方法</title><link>http://localhost:1313/post/JS%E6%95%B0%E7%BB%84%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 22 Mar 2021 22:29:25 +0000</pubDate><guid>http://localhost:1313/post/JS%E6%95%B0%E7%BB%84%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</guid><description>&lt;ol>
&lt;li>数组相关概念&lt;/li>
&lt;li>数组常用方法及重构&lt;/li>
&lt;/ol></description></item><item><title>回调函数与设计模式</title><link>http://localhost:1313/post/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Fri, 19 Mar 2021 22:25:24 +0000</pubDate><guid>http://localhost:1313/post/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>&lt;ol>
&lt;li>参数的定义&lt;/li>
&lt;li>&lt;code>return&lt;/code>的基本使用&lt;/li>
&lt;li>单例模式/工厂模式/桥接模式&lt;/li>
&lt;li>回调函数的概念&lt;/li>
&lt;/ol></description></item><item><title>JavaScript--对象和函数</title><link>http://localhost:1313/post/JavaScript-%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%87%BD%E6%95%B0/</link><pubDate>Thu, 18 Mar 2021 16:44:01 +0000</pubDate><guid>http://localhost:1313/post/JavaScript-%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%87%BD%E6%95%B0/</guid><description>&lt;ol>
&lt;li>JavaScript对象相关&lt;/li>
&lt;li>垃圾回收机制、内存泄漏&lt;/li>
&lt;li>JavaScript函数相关&lt;/li>
&lt;/ol></description></item><item><title>JavaScript条件语句与循环语句</title><link>http://localhost:1313/post/21-03-19/</link><pubDate>Wed, 17 Mar 2021 07:51:19 +0000</pubDate><guid>http://localhost:1313/post/21-03-19/</guid><description>&lt;ol>
&lt;li>
&lt;h5 id="条件语句">条件语句&lt;/h5>
&lt;/li>
&lt;li>
&lt;h5 id="循环语句">循环语句&lt;/h5>
&lt;/li>
&lt;li>
&lt;h5 id="解决基本问题">解决基本问题&lt;/h5>
&lt;/li>
&lt;/ol></description></item><item><title>数据类型转换与运算符</title><link>http://localhost:1313/post/21-03-18/</link><pubDate>Tue, 16 Mar 2021 08:03:46 +0000</pubDate><guid>http://localhost:1313/post/21-03-18/</guid><description>&lt;ol>
&lt;li>字符串、布尔值、数值之间的转换&lt;/li>
&lt;li>运算符&lt;/li>
&lt;li>运算有关的一些条件判断。&lt;/li>
&lt;/ol></description></item><item><title>原生JavaScript基础</title><link>http://localhost:1313/post/21-03-17/</link><pubDate>Mon, 15 Mar 2021 07:50:30 +0000</pubDate><guid>http://localhost:1313/post/21-03-17/</guid><description>&lt;ol>
&lt;li>
&lt;h5 id="javascript的引入方式">JavaScript的引入方式&lt;/h5>
&lt;/li>
&lt;li>
&lt;h5 id="常用方法">常用方法&lt;/h5>
&lt;/li>
&lt;li>
&lt;h5 id="基本数据类型">基本数据类型&lt;/h5>
&lt;/li>
&lt;li>
&lt;h5 id="数据类型转换">数据类型转换&lt;/h5>
&lt;/li>
&lt;/ol></description></item><item><title>JavaScript高阶函数</title><link>http://localhost:1313/post/20-04-06/</link><pubDate>Mon, 06 Apr 2020 13:40:48 +0000</pubDate><guid>http://localhost:1313/post/20-04-06/</guid><description>&lt;p>1.filter函数
2.map函数
3.reduce函数
了解JavaScript中高阶函数的使用开发可以更加简洁&lt;/p></description></item></channel></rss>